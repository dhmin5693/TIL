# 복제

- 네트워크로 연결된 여러 장비에 동일한 데이터의 복사본을 유지하는 것
- 실제로 복사하는 방법과 파티셔닝(샤딩)하여 분산하는 방법

## 리더와 팔로워

- 복사본을 저장하는 노드는 `replica` 라고 부름
- `reader` 는 데이터를 직접적으로 저장하는 역할이며, 데이터 저장 즉시 `replica` 에 데이터를 복제한다.

### 동기식 대 비동기식 복제

1. 데이터 갱신 요청 수신
2. 리더가 요청을 받아서 데이터 변경
3. 데이터 변경 정보를 팔로워(replica) 에게 전달

- 동기식
    - 위의 flow를 실행할 때, 리더가 팔로워의 저장 완료를 기다리면 동기식이다.
    - 동기식은 리더와 팔로워가 일관된 최신 데이터를 가지는 것을 보장한다
    - 동기 작업으로 처리 중 팔로워가 응답하지 않거나 응답이 늦으면 쓰기 작업이 처리되지 않을 수 있다.
    - 그렇기 때문에 하나의 노드에 장애가 생겨도 전체 시스템을 멈추게 할 수 있다.
    - 현실적으로 모든 팔로워를 동기식으로 구현하기보다는 1개 노드를 동기식, 그 외를 비동기식으로 설정하여 사용한다.

### 노드 중단 처리

- 노드는 장애로 중단될 수도 있지만 계획된 유지보수(OS 업데이트 등)로 중단될 수 있다.
- 개별 노드의 장애에도 전체 시스템이 동작해야 하며 노드 중단의 영향을 최소화해야 한다.

### 팔로워 장애: 따라잡기 복구

- 팔로워가 데이터 변경 요청을 받으면 그 변경 로그를 로컬에 저장
- 팔로워가 죽어 재시작하거나 네트워크 오류가 발생하는 경우 로그를 기반으로 복구 가능

### 리더 장애: 장애 복구

- 팔로워 중 하나를 새로운 리더로 승격
- 클라이언트는 새로운 리더로 쓰기를 전송해야 하기 때문에 재설정 필요
- 이 과정을 `장애 복구 (failover)` 라고 함.
